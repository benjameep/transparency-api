swagger: '2.0'
info:
  description: A brief API List for the Transparency Database
  version: '0.0.1 '
  title: Transparency Database API
host: docs.aintfor.me
basePath: /v0
schemes:
  - http
  - https
tags:
  - name: User
  - name: Store
  - name: Projects
  - name: Donations
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      tags:
        - User
      summary: Returns a list of all users.
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - User
      summary: Create a user account.
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/User'
  '/users/{userID}':
    get:
      tags:
        - User
      summary: Pulls user data to display
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: userID
          required: true
          type: string
    put:
      tags:
        - User
      summary: Update and change the user account.
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: userID
          required: true
          type: integer
          format: int64
  '/users/{userID}/suspend':
    post:
      tags:
        - User
      summary: Admins can suspend user accounts.
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: userID
          required: true
          type: integer
          format: int64
  /projects:
    get:
      tags:
        - Projects
      summary: Returns a list of all projects.
      responses:
        '200':
          description: ok
  '/projects/{projectID}':
    get:
      tags:
        - Projects
      summary: Returns a project's details.
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: projectID
          required: true
          type: integer
          format: int64
  '/projects/{projectID}/create':
    post:
      tags:
        - Projects
      summary: Create a project suggestion (Normal user)
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: projectID
          required: true
          type: integer
          format: int64
  '/projects/{projectID}/publish':
    post:
      tags:
        - Projects
      summary: Publish a suggested project as an official project (Admin).
      produces:
        - application/json
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: projectID
          required: true
          type: integer
          format: int64
  '/projects/{projectID}/contribute':
    post:
      tags:
        - Projects
      summary: Contribute hours to a project.
      produces:
        - application/json
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: projectID
          required: true
          type: integer
          format: int64
  '/projects/{projectID}/update':
    put:
      tags:
        - Projects
      summary: Update Project Details (Admin)
      produces:
        - application/json
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: projectID
          required: true
          type: integer
          format: int64
  '/project/{projectID}/donations':
    get:
      tags:
        - Donations
      summary: Returns a list of all the donations towards a project.
      produces:
        - application/json
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: projectID
          required: true
          type: integer
          format: int64
  '/project/{projectID}/donations/{donationID}':
    get:
      tags:
        - Donations
      summary: Get the details of a specific donation.
      produces:
        - application/json
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: projectID
          required: true
          type: integer
          format: int64
        - in: path
          name: donationID
          required: true
          type: integer
          format: int64
  '/project/{projectID}/donations/create':
    post:
      tags:
        - Donations
      summary: creates a donation towards a specific project.
      produces:
        - application/json
      responses:
        '200':
          description: ok
      parameters:
        - in: path
          name: projectID
          required: true
          type: integer
          format: int64
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://docs.aintfor.me/oauth/authorize
    tokenUrl: https://docs.aintfor.me/oauth/token
    scopes:
      read: Grants read access
      write: Grants write access
      admin: Grants read and write access to administrative information
definitions:
  User:
    type: object
    properties:
      id:
        type: string
        example: '23891'
      username:
        type: string
        example: john32
      firstName:
        type: string
        example: John
      lastName:
        type: string
        example: Doe
      email:
        type: string
        format: email
        example: john@example.com
      phone:
        type: string
        format: phone
        example: 000-000-0000
      mailing:
        $ref: '#/definitions/Address'
      billing:
        $ref: '#/definitions/Address'
    xml:
      name: User
  Address:
    type: object
    properties:
      line1:
        type: string
        example: 100 example st.
      line2:
        type: string
        example: 'apt #1'
      city:
        type: string
        example: Springfield
      state:
        type: string
        pattern: '/^[A-Z]{2}$/'
        example: AL
      zipcode:
        type: string
        pattern: '/^\d{5}(-\d{4})?$/'
        example: 00000-0000
